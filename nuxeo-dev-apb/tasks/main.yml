---

- name: "Update last operation"
  asb_last_operation:
    description: "0%: Starting"
  when: in_cluster

- name: "Create Nuxeo Dev global config map"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'global-config.yml.j2') | from_yaml }}"
  when: state == 'present'

- name: "Create custom bindings config map"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'custom-bindings.yml.j2') | from_yaml }}"
  when: state == 'present'
  loop:
    - dev
    - test

- name: "Set Nuxeo Dev global objects state={{ state }}"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', item.name) | from_yaml }}"
  when: item.apply | default(True)
  loop:
    - name: connect-secret.yml.j2
    - name: connect-secret-basic.yml.j2
    - name: hotfix-secret.yml.j2
    - name: ssh-secret.yml.j2
      apply: "{{ github_need_ssh }}"

- name: "Instantiating backend storage"
  include_tasks: "backend_storage.yml"
  # As it requires APB and Ansible Service catalog
  # we do not run that part in test
  when: not testing

- name: "Instantiating CI/CD"
  include_tasks: "cicd.yml"
  # As it requires APB and Ansible Service catalog
  # we do not run that part in test
  when: not testing

- name: "Instantiating build pipeline"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'pipeline-service.yml.j2') | from_yaml }}"
  when: not nuxeo_only

- name: "Instantiating release pipeline"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'release-pipeline.yml.j2') | from_yaml }}"
  when: not nuxeo_only

- name: "Instantiating Nuxeo only application"
  include_tasks: "nuxeo_only.yml"
  when: nuxeo_only

- name: "Remove Nuxeo Dev global config map"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'global-config.yml.j2') | from_yaml }}"
  when: state == 'absent'


- name: "Update last operation"
  asb_last_operation:
    description: "100%: Cluster objects state={{ state }}"
  when: in_cluster
